library(twitteR)
library(httr)
# Carregando a biblioteca com funções de limpeza
source('utils.R')
# Mini-Projeto 1 - Análise de Sentimentos em Redes Sociais
# Obs: Caso tenha problemas com a acentuação, consulte este link:
# https://support.rstudio.com/hc/en-us/articles/200532197-Character-Encoding
# Configurando o diretório de trabalho
# Coloque entre aspas o diretório de trabalho que você está usando no seu computador
setwd("C:/FCD/BigDataRAzure/Cap17/Mini-Projeto01/")
getwd()
## Etapa 1 - Pacotes e Autenticação
# Instalando e Carregando o Pacote twitteR
install.packages("twitteR")
install.packages("httr")
library(twitteR)
library(httr)
# Carregando a biblioteca com funções de limpeza
source('utils.R')
# Chaves de autenticação no Twitter
key <- "MfIL2FUVVHPQmqhjGI9hm4bCA"
secret <- "txgAvXrg3HvMdhxGBrGIz5yqCOBVA5Vh6Lb3tIQqGn2v07OsCY"
token <- "902605855496994818-u3YlTOpqcjAplJJkK29ismudbrtVZXx"
tokensecret <- "d46QOh8wFltDVsWzFBmk7RBUJHQRx5G4PYyiSDcFBxpHh"
# Autenticação. Responda 1 quando perguntado sobre utilizar direct connection.
setup_twitter_oauth(key, secret, token, tokensecret)
library(tm)
library(SnowballC)
library(wordcloud)
library(e1071)
library(gmodels)
#install.packages('libcoin', dependencies = T)
#install.packages('C50', dependencies = T)
library(C50)
install.packages("C50")
#install.packages('libcoin', dependencies = T)
#install.packages('C50', dependencies = T)
library(C50)
install.packages("C50")
# Construindo um modelo
install.packages("mvtnorm")
#install.packages('libcoin', dependencies = T)
#install.packages('C50', dependencies = T)
library(C50)
install.packages("C50", repos="http://R-Forge.R-project.org")
library(C50)
# Carrega bibliotecas necessárias
library(dplyr)
library(gdata)
library(ggplot2)
# Aponta para o diretório onde estão os arquivos
setwd("~/analise-series-historicas-b3")
# Carrega funções que serão utilizadas no script
source("funcoes.R")
df <- ler_arquivo("COTAHIST_A2022.TXT")
# Faz a leitura das primeiras linhas do arquivo
head(df)
# Converte string para Data
df$DATAP = as.Date(df$DATAP, "%Y%m%d")
# Obtém as casas decimais dos valores
df$PREABE = df$PREABE/100
df$PREMAX = df$PREMAX/100
df$PREMIN = df$PREMIN/100
df$PREMED = df$PREMED/100
df$PREULT = df$PREULT/100
df$PREOFC = df$PREOFC/100
df$PREOFV = df$PREOFV/100
df$VOLTOT = df$VOLTOT/100
df$PREEXE = df$PREEXE/100
# Resumo estatístico
summary(df$PREMAX)
# Empresas
table(df$CODNEG)
head(df)
COD = 'ELET6'
dfCODNEG <- filter(df, trim(CODNEG) == COD)
# Gera gráfico de linhas para Preço de Abertura do Papelmercado no pregão
titulo = paste("Evolução do Preço de Abertura. Código:", COD, sep = ' ')
cor="blue"
gerar_grafico(dfCODNEG, dfCODNEG$DATAP, dfCODNEG$PREABE, titulo, cor)
# Gera gráfico de linhas para Preço de Abertura do Papelmercado no pregão
titulo = paste("Evolução do Preço Máximo. Código:", COD, sep = ' ')
cor="green"
gerar_grafico(dfCODNEG, dfCODNEG$DATAP, dfCODNEG$PREMAX, titulo, cor)
library(factoextra)
library(factoextra)
# Pacotes
install.packages("factoextra")
install.packages("cluster")
install.packages("fpc")
install.packages("NbClust")
install.packages("clValid")
install.packages("clustertend")
library(factoextra)
library(cluster)
library(ggplot2)
library(ggplot)
library(ggplot2)
